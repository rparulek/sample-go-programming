# This manifest installs Next Bus API REST API service
# on Kubernetes or OpenShift nodes
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: next-bus-api-ds
  namespace: kube-system
  labels:
    k8s-app: next-bus-api-ds
spec:
  selector:
    matchLabels:
      k8s-app: next-bus-api-ds
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: next-bus-api-ds
    spec:
      hostNetwork: true
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
          operator: Exists
      nodeSelector:
        install-next-bus-api: "true"
      containers:
        # This container will serve "/agencyList" next bus api on port 5001
        - name: next-bus-api-agency-list
          image: next-bus-api-img/:v0.0.1
          ports:
            - containerPort: 5001
              hostPort: 5001
          securityContext:
            privileged: true
          env:
            # Pass agencyList env variable to spawn respective 
            # Python flask web service
            - name: endpoint
              value: "agencyList"
        # This container will serve "/routeList" next bus api on port 5002
        - name: next-bus-api-route-list
          image: next-bus-api-img/:v0.0.1
          ports:
            - containerPort: 5002
              hostPort: 5002
          securityContext:
            privileged: true
          env:
            # Pass routeList env variable to spawn respective
            # Python flask web service
            - name: endpoint
              value: "routeList"
        # This container will serve "/routeConfig" next bus api
        - name: next-bus-api-route-config
          image: next-bus-api-img/:v0.0.1
          ports:
            - containerPort: 5003
              hostPort: 5003
          securityContext:
            privileged: true
          env:
            # Pass routeConfig env variable to spawn respective
            # Python flask web service
            - name: endpoint
              value: "routeConfig"
        # This container will serve "/predictions" next bus api
        - name: next-bus-api-predictions
          image: next-bus-api-img/:v0.0.1
          ports:
            - containerPort: 5004
              hostPort: 5004
          securityContext:
            privileged: true
          env:
            # Pass predictions env variable to spawn respective
            # Python flask web service
            - name: endpoint
              value: "predictions"
        # This container will serve "/predictionsForMultiStops" next bus api
        - name: next-bus-api-predictions-multi-stops
          image: next-bus-api-img/:v0.0.1
          ports:
            - containerPort: 5005
              hostPort: 5005
          securityContext:
            privileged: true
          env:
            # Pass predictionsForMultiStops env variable to spawn respective
            # Python flask web service
            - name: endpoint
              value: "predictionsForMultiStops"
        # This container will serve "/schedule" next bus api
        - name: next-bus-api-schedule
          image: next-bus-api-img/:v0.0.1
          ports:
            - containerPort: 5006
              hostPort: 5006
          securityContext:
            privileged: true
          env:
            # Pass schedule env variable to spawn respective
            # Python flask web service
            - name: endpoint
              value: "schedule"
        # This container will serve "/vehicleLocations" next bus api
        - name: next-bus-api-vehicle-locations
          image: next-bus-api-img/:v0.0.1
          ports:
            - containerPort: 5007
              hostPort: 5007
          securityContext:
            privileged: true
          env:
            # Pass vehicleLocations env variable to spawn respective
            # Python flask web service
            - name: endpoint
              value: "vehicleLocations"
        # This container will serve "/messages" next bus api
        - name: next-bus-api-messages
          image: next-bus-api-img/:v0.0.1
          ports:
            - containerPort: 5008
              hostPort: 5008
          securityContext:
            privileged: true
          env:
            # Pass messages env variable to spawn respective
            # Python flask web service
            - name: endpoint
              value: "messages"
